<?xml version="1.0" encoding="Windows-1251"?>
<!DOCTYPE TestConfig SYSTEM "TestSet.dtd">
<TestConfig>
<!--
	<URL>url:rlcp://ove:ove@127.0.0.1:2005</URL>
-->
	<URL>url:rlcp://ove:ove@192.168.0.7:2005</URL>
	<RLCPRequest>
		<Request>
			<Conditions>
<ConditionForChecking id="1" Time="10">
<Input><!--
6 2 5 4 7 3 8 1 9
1 8 0 2 5 9 3 7 6
3 0 7 1 6 8 2 4 5
8 7 6 9 3 4 0 5 2
5 3 2 6 0 7 4 9 8
9 4 1 8 2 5 6 3 7
4 5 0 7 8 2 9 6 1
2 6 9 5 4 1 7 8 3
7 1 8 3 9 6 5 2 4
--></Input><Output><!--
6 2 5 4 7 3 8 1 9
1 8 4 2 5 9 3 7 6
3 9 7 1 6 8 2 4 5
8 7 6 9 3 4 1 5 2
5 3 2 6 1 7 4 9 8
9 4 1 8 2 5 6 3 7
4 5 3 7 8 2 9 6 1
2 6 9 5 4 1 7 8 3
7 1 8 3 9 6 5 2 4
--></Output>
</ConditionForChecking>
<ConditionForChecking id="2" Time="10">
<Input><!--
1 7 6 3 9 4 5 8 0
2 0 3 7 6 8 1 9 4
4 8 9 5 2 1 3 6 7
3 9 5 4 8 0 2 0 6
6 1 8 0 5 9 7 4 3
7 4 2 6 1 3 8 5 9
5 3 4 1 7 0 9 2 8
8 2 7 9 4 5 6 3 1
0 6 1 8 3 2 4 7 5
--></Input><Output><!--
1 7 6 3 9 4 5 8 2
2 5 3 7 6 8 1 9 4
4 8 9 5 2 1 3 6 7
3 9 5 4 8 7 2 1 6
6 1 8 2 5 9 7 4 3
7 4 2 6 1 3 8 5 9
5 3 4 1 7 6 9 2 8
8 2 7 9 4 5 6 3 1
9 6 1 8 3 2 4 7 5
--></Output>
</ConditionForChecking>
<ConditionForChecking id="3" Time="10">
<Input><!--
2 0 4 5 1 7 9 6 8
5 8 6 2 3 9 7 1 4
7 9 1 0 6 8 0 2 3
4 1 9 6 2 3 8 7 5
8 7 2 0 5 1 4 3 6
6 5 3 7 8 4 2 9 1
1 4 7 3 9 5 0 8 2
3 2 5 8 7 6 1 4 9
9 6 8 1 4 2 3 5 7
--></Input><Output><!--
2 3 4 5 1 7 9 6 8
5 8 6 2 3 9 7 1 4
7 9 1 4 6 8 5 2 3
4 1 9 6 2 3 8 7 5
8 7 2 9 5 1 4 3 6
6 5 3 7 8 4 2 9 1
1 4 7 3 9 5 6 8 2
3 2 5 8 7 6 1 4 9
9 6 8 1 4 2 3 5 7
--></Output>
</ConditionForChecking>
<ConditionForChecking id="4" Time="10">
<Input><!--
5 4 1 7 2 8 6 3 9
6 2 3 5 0 4 7 8 1
8 7 9 6 3 1 4 2 5
3 1 6 8 4 5 9 7 0
4 8 2 9 1 7 5 6 3
7 9 5 0 6 2 8 0 4
2 3 8 4 5 6 1 9 7
1 6 0 2 7 9 3 5 8
9 5 7 1 8 3 0 4 6
--></Input><Output><!--
5 4 1 7 2 8 6 3 9
6 2 3 5 9 4 7 8 1
8 7 9 6 3 1 4 2 5
3 1 6 8 4 5 9 7 2
4 8 2 9 1 7 5 6 3
7 9 5 3 6 2 8 1 4
2 3 8 4 5 6 1 9 7
1 6 4 2 7 9 3 5 8
9 5 7 1 8 3 2 4 6
--></Output>
</ConditionForChecking>
<ConditionForChecking id="5" Time="10">
<Input><!--
4 3 6 1 8 5 7 2 9
5 7 2 9 4 6 1 3 8
9 1 8 0 2 3 6 5 4
8 2 3 4 5 7 9 6 1
1 9 5 2 6 0 3 4 7
7 6 4 3 1 9 5 8 2
2 5 9 8 3 1 4 0 6
6 0 1 5 7 4 2 9 3
0 4 7 6 9 2 8 1 5
--></Input><Output><!--
4 3 6 1 8 5 7 2 9
5 7 2 9 4 6 1 3 8
9 1 8 7 2 3 6 5 4
8 2 3 4 5 7 9 6 1
1 9 5 2 6 8 3 4 7
7 6 4 3 1 9 5 8 2
2 5 9 8 3 1 4 7 6
6 8 1 5 7 4 2 9 3
3 4 7 6 9 2 8 1 5
--></Output>
</ConditionForChecking>
<ConditionForChecking id="6" Time="10">
<Input><!--
5 7 2 3 8 4 1 6 9
6 1 3 7 9 0 5 4 8
8 4 9 1 5 6 2 3 7
3 9 0 8 6 1 7 2 4
7 2 8 5 4 3 6 9 1
4 6 1 2 7 9 8 0 3
0 8 7 4 3 5 9 1 6
9 5 4 0 1 7 3 8 2
1 3 6 9 2 8 4 7 0
--></Input><Output><!--
5 7 2 3 8 4 1 6 9
6 1 3 7 9 2 5 4 8
8 4 9 1 5 6 2 3 7
3 9 5 8 6 1 7 2 4
7 2 8 5 4 3 6 9 1
4 6 1 2 7 9 8 5 3
2 8 7 4 3 5 9 1 6
9 5 4 6 1 7 3 8 2
1 3 6 9 2 8 4 7 5
--></Output>
</ConditionForChecking>
<ConditionForChecking id="7" Time="10">
<Input><!--
4 0 1 6 2 3 7 9 8
8 2 9 0 7 5 6 1 3
6 7 3 1 9 8 5 4 2
9 8 2 7 6 4 3 5 1
3 0 4 9 5 2 8 7 6
5 6 7 8 3 1 4 2 0
1 4 6 2 0 7 9 3 5
2 9 5 3 4 6 1 8 7
7 3 8 0 1 9 2 6 4
--></Input><Output><!--
4 5 1 6 2 3 7 9 8
8 2 9 4 7 5 6 1 3
6 7 3 1 9 8 5 4 2
9 8 2 7 6 4 3 5 1
3 1 4 9 5 2 8 7 6
5 6 7 8 3 1 4 2 9
1 4 6 2 8 7 9 3 5
2 9 5 3 4 6 1 8 7
7 3 8 5 1 9 2 6 4
--></Output>
</ConditionForChecking>
<ConditionForChecking id="8" Time="10">
<Input><!--
4 2 1 6 7 0 5 9 3
7 8 3 9 4 5 0 1 2
6 9 5 2 1 3 4 7 8
5 1 8 7 0 6 2 4 9
2 7 4 1 8 9 3 6 5
3 6 0 5 2 4 1 8 7
8 3 2 4 6 7 9 5 1
1 5 6 8 0 2 7 3 4
9 4 7 3 5 1 8 0 6
--></Input><Output><!--
4 2 1 6 7 8 5 9 3
7 8 3 9 4 5 6 1 2
6 9 5 2 1 3 4 7 8
5 1 8 7 3 6 2 4 9
2 7 4 1 8 9 3 6 5
3 6 9 5 2 4 1 8 7
8 3 2 4 6 7 9 5 1
1 5 6 8 9 2 7 3 4
9 4 7 3 5 1 8 2 6
--></Output>
</ConditionForChecking>
<ConditionForChecking id="9" Time="10">
<Input><!--
3 8 5 4 2 9 1 7 0
6 4 7 3 1 5 9 2 8
1 9 2 7 8 6 0 3 4
7 3 1 8 5 0 2 6 9
5 0 8 6 9 3 4 1 7
9 6 4 2 7 1 8 5 3
4 0 9 0 3 7 6 8 2
8 7 6 5 4 2 3 9 1
2 1 3 9 6 8 7 4 5
--></Input><Output><!--
3 8 5 4 2 9 1 7 6
6 4 7 3 1 5 9 2 8
1 9 2 7 8 6 5 3 4
7 3 1 8 5 4 2 6 9
5 2 8 6 9 3 4 1 7
9 6 4 2 7 1 8 5 3
4 5 9 1 3 7 6 8 2
8 7 6 5 4 2 3 9 1
2 1 3 9 6 8 7 4 5
--></Output>
</ConditionForChecking>
<ConditionForChecking id="10" Time="10">
<Input><!--
0 3 9 2 5 7 4 1 8
2 8 5 4 1 3 6 9 7
1 4 7 8 6 9 3 5 2
8 2 1 3 7 5 9 6 4
3 9 4 1 8 6 2 7 0
7 5 6 9 4 2 8 3 1
4 6 2 7 9 1 5 8 3
5 7 3 6 2 8 1 4 9
9 0 8 5 3 4 7 2 6
--></Input><Output><!--
6 3 9 2 5 7 4 1 8
2 8 5 4 1 3 6 9 7
1 4 7 8 6 9 3 5 2
8 2 1 3 7 5 9 6 4
3 9 4 1 8 6 2 7 5
7 5 6 9 4 2 8 3 1
4 6 2 7 9 1 5 8 3
5 7 3 6 2 8 1 4 9
9 1 8 5 3 4 7 2 6
--></Output>
</ConditionForChecking>
			</Conditions>
			<Instructions>
				<!-- 
&amp;lt;?xml version=&amp;quot;1.0&amp;quot; encoding=&amp;quot;KOI8&amp;#0045;R&amp;quot;?&amp;gt;&amp;lt;br/&amp;gt;&amp;lt;Program langType=&amp;quot;msvc&amp;quot;&amp;gt;&amp;lt;!&amp;#0045;&amp;#0045;#include &amp;amp;lt;iostream&amp;amp;gt;&amp;amp;lt;br/&amp;amp;gt;&amp;amp;lt;br/&amp;amp;gt;using namespace std;&amp;amp;lt;br/&amp;amp;gt;&amp;amp;lt;br/&amp;amp;gt;int main(){&amp;amp;lt;br/&amp;amp;gt;    unsigned long i,j,k, a[10][10], b[10] = { 0 } ;&amp;amp;lt;br/&amp;amp;gt;&amp;amp;lt;br/&amp;amp;gt;    for (i=0; i&amp;amp;lt;9; i++) {&amp;amp;lt;br/&amp;amp;gt;  for (j=0; j&amp;amp;lt;9; j++) {&amp;amp;lt;br/&amp;amp;gt;  cin &amp;amp;gt;&amp;amp;gt; a[i][j]; &amp;amp;lt;br/&amp;amp;gt;}&amp;amp;lt;br/&amp;amp;gt;};&amp;amp;lt;br/&amp;amp;gt;&amp;amp;lt;br/&amp;amp;gt;bool z = true; &amp;amp;lt;br/&amp;amp;gt;&amp;amp;lt;br/&amp;amp;gt;while (z) {&amp;amp;lt;br/&amp;amp;gt;    for (i=0; i&amp;amp;lt;9; i++) {&amp;amp;lt;br/&amp;amp;gt;     for (j=0; j&amp;amp;lt;9; j++) {&amp;amp;lt;br/&amp;amp;gt;       if (a[i][j] == 0) { &amp;amp;lt;br/&amp;amp;gt;&amp;amp;lt;br/&amp;amp;gt;&amp;amp;lt;br/&amp;amp;gt;&amp;amp;lt;br/&amp;amp;gt;for (k=0; k&amp;amp;lt;9; k++) {&amp;amp;lt;br/&amp;amp;gt;  b[a[i][k]] = 1; &amp;amp;lt;br/&amp;amp;gt;}  &amp;amp;lt;br/&amp;amp;gt;&amp;amp;lt;br/&amp;amp;gt;for (k=0; k&amp;amp;lt;9; k++) {&amp;amp;lt;br/&amp;amp;gt;  b[a[k][j]] = 1; &amp;amp;lt;br/&amp;amp;gt;}  &amp;amp;lt;br/&amp;amp;gt;&amp;amp;lt;br/&amp;amp;gt;for (k=0; k&amp;amp;lt;(i/3)*3; k&amp;amp;lt;(i/3+1)*3) {&amp;amp;lt;br/&amp;amp;gt;  for (l=0; l&amp;amp;lt;(j/3)*3; l&amp;amp;lt;(j/3+1)*3) {&amp;amp;lt;br/&amp;amp;gt;    b[a[k][l]] = 1; &amp;amp;lt;br/&amp;amp;gt;  }  &amp;amp;lt;br/&amp;amp;gt;};&amp;amp;lt;br/&amp;amp;gt;&amp;amp;lt;br/&amp;amp;gt;int n = 0; int ii = 0; &amp;amp;lt;br/&amp;amp;gt;&amp;amp;lt;br/&amp;amp;gt;for (l=1; l&amp;amp;lt;10; l++) {&amp;amp;lt;br/&amp;amp;gt;  if (b[l] == 0) { n++; ii = l };&amp;amp;lt;br/&amp;amp;gt;};&amp;amp;lt;br/&amp;amp;gt;&amp;amp;lt;br/&amp;amp;gt;if (n==1) a[i][j] = ii; &amp;amp;lt;br/&amp;amp;gt;&amp;amp;lt;br/&amp;amp;gt;z = true;&amp;amp;lt;br/&amp;amp;gt;       } else { z =false;}; &amp;amp;lt;br/&amp;amp;gt;    }&amp;amp;lt;br/&amp;amp;gt;};&amp;amp;lt;br/&amp;amp;gt;};&amp;amp;lt;br/&amp;amp;gt;    &amp;amp;lt;br/&amp;amp;gt;    for (i=0; i&amp;amp;lt;9; i++) {&amp;amp;lt;br/&amp;amp;gt;  for (j=0; j&amp;amp;lt;9; j++) {&amp;amp;lt;br/&amp;amp;gt;  cout &amp;amp;lt;&amp;amp;lt; a[i][j]; &amp;amp;lt;br/&amp;amp;gt;}&amp;amp;lt;br/&amp;amp;gt;};&amp;amp;lt;br/&amp;amp;gt;&amp;amp;lt;br/&amp;amp;gt;&amp;amp;lt;br/&amp;amp;gt;    return 0;&amp;amp;lt;br/&amp;amp;gt;}&amp;amp;lt;br/&amp;amp;gt;&amp;amp;lt;br/&amp;amp;gt;/*&amp;amp;lt;br/&amp;amp;gt;6 2 7 5 4 3 8 9 1 &amp;amp;lt;br/&amp;amp;gt;8 3 0 9 2 6 5 7 4&amp;amp;lt;br/&amp;amp;gt;9 4 5 7 1 0 6 3 0&amp;amp;lt;br/&amp;amp;gt;2 8 4 6 5 3 9 1 7&amp;amp;lt;br/&amp;amp;gt;1 9 6 4 2 7 3 8 5&amp;amp;lt;br/&amp;amp;gt;5 7 3 1 8 9 2 4 6 &amp;amp;lt;br/&amp;amp;gt;3 1 9 2 6 0 7 5 8&amp;amp;lt;br/&amp;amp;gt;7 5 2 8 9 1 4 6 3&amp;amp;lt;br/&amp;amp;gt;4 6 8 3 5 7 1 2 9*/&amp;#0045;&amp;#0045;&amp;gt;&amp;lt;/Program&amp;gt;&amp;lt;br/&amp;gt; 
-->
			</Instructions>
		</Request>
	</RLCPRequest>
</TestConfig>
